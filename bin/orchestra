#!/usr/bin/env php
<?php
if (php_sapi_name() !== 'cli') {
    exit;
}
// print Banner :)
print_r(
"    ____  __  ______     ____  ____  ________  _______________________  ___ ". PHP_EOL.
"   / __ \/ / / / __ \   / __ \/ __ \/ ____/ / / / ____/ ___/_  __/ __ \/   |".PHP_EOL.
"  / /_/ / /_/ / /_/ /  / / / / /_/ / /   / /_/ / __/  \__ \ / / / /_/ / /| |".PHP_EOL.
" / ____/ __  / ____/  / /_/ / _, _/ /___/ __  / /___ ___/ // / / _, _/ ___ |".PHP_EOL.
"/_/   /_/ /_/_/       \____/_/ |_|\____/_/ /_/_____//____//_/ /_/ |_/_/  |_|".PHP_EOL.
"".PHP_EOL.
"Visit > http://github.com/php-orchestra/orchestra".PHP_EOL
);

$appDirectory = __DIR__.'/../cli';
$useRequire = true;
if (class_exists('Phar')) {
    // Maybe this file is used as phar-stub? Let's try!
    try {
        var_dump(__FILE__ . PHP_EOL);
        Phar::mapPhar(__FILE__);

        require_once 'phar://'. __FILE__ .'/cli/vendor/autoload.php';
        $useRequire = false;
    } catch (PharException $e) {
    }
}
if ($useRequire) {
    die('on require');
    require $appDirectory . '/vendor/autoload.php';
}


use PhpOrchestra\Cli\Application;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;

$containerBuilder = new ContainerBuilder();
$loader = new YamlFileLoader(
    $containerBuilder, 
    new FileLocator('phar://'. __FILE__ .'/cli/config')
);
$loader->load('services.yaml');

$containerBuilder->compile();
exit($containerBuilder->get(Application::class)->run());

__HALT_COMPILER();
